

################################################################################
#  STEP 1:  Flatten trees.
#             -- uses hd_utilities/FlattenForFSRoot/flatten
#             -- documentation is in hd_utilities/FlattenForFSRoot/Documentation
#             -- input tree is in the GlueX analysis format
#             -- type of input tree (reconstructed data, reconstructed MC, or thrown MC)
#                determined automatically
#             -- output is a root file with a flattened TTree (compatible with FSRoot)
#           For reconstructed trees:
#             -- final state is determined automatically
#             -- will exit with no output root file if the final state is not supported
#             -- run separately over each run and each final state
#           For thrown trees:
#             -- cut arguments (-chi2, -shQuality, etc.) are ignored
#             -- run separately over each run
################################################################################

SOMEPATH/hd_utilities/FlattenForFSRoot/flatten \
           -chi2 25 \
           -numUnusedTracks 1 \
           -numUnusedNeutrals 2 \
           -shQuality 0.5 \
           -massWindows 0.05  \
           -in INPUTDIR/BASENAME.root \
           -out OUTPUTDIR/BASENAME_flat.root



################################################################################
#  STEP 2:  Create histograms.
#             -- uses GlueXSurvey/surveyFSTreeToHist
#             -- available in GitHub:
#                  https://github.com/remitche66/GlueXSurvey.git
#             -- depends on FSRoot (tag version >= v2.4): 
#                  https://github.com/remitche66/FSRoot.git   
#             -- output is a histogram file
#           For reconstructed trees:
#             -- run separately over each run and each final state
#           For thrown trees:
#             -- run separately over each run
################################################################################

SOMEPATH/GlueXSurvey/surveyFSTreeToHist \
        -in INPUTDIR/BASENAME_flat.root \
        -out OUTPUTDIR/BASENAME_survey.hist



################################################################################
#  STEP 3:  Combine histograms with hadd.
#           For reconstructed histogram files:
#             -- combine histograms into a single file for each final state
#             -- the "*" below is a wildcard for all run numbers 
#           For thrown histogram files:
#             -- combine histograms into a single file
#             -- the "*" below is a wildcard for all run numbers 
################################################################################

SOMEPATH/root/bin/hadd \
        OUTPUTDIR/BASENAME_survey.hist \
        INPUTDIR/BASENAME_*_survey.hist



################################################################################
#  STEP 4:  Make a PDF file of histograms.
#             -- uses GlueXSurvey/surveyHistToLatex
#             -- available in GitHub:
#                  https://github.com/remitche66/GlueXSurvey.git
#             -- depends on FSRoot (tag version >= v2.4): 
#                  https://github.com/remitche66/FSRoot.git   
#             -- also makes a system call to pdflatex
#             -- run once for each final state
#           For reconstructed MC:
#             -- for bggen MC also use the argument -in2 to specify a file with
#                  thrown histograms (produced in step 3)
#                 -- this will produce a table of production rates and efficiencies
#                 -- without this argument, the table is not produced
#           For thrown MC:
#             -- if the input histogram file is for thrown histograms, the
#                  output PDF is a table of generated final states
################################################################################

SOMEPATH/GlueXSurvey/surveyHistToLatex \
        -in INPUTDIR/BASENAME_survey.hist \
           (-in2 is optional for bggen MC)
        -in2 THROWNDIR/BASENAME_survey.hist \
        -dir OUTPUTDIR \
        -name BASENAME

